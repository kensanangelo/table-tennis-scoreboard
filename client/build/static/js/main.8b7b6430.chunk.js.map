{"version":3,"sources":["components/Clock/Clock.js","config.js","components/API/API.js","components/Setup/Setup.js","components/Scoreboard/ScoreCard.js","components/Scoreboard/Scoreboard.js","App.js","index.js"],"names":["Clock","props","state","time","Date","toLocaleString","hour","minute","hour12","this","intervalID","setInterval","tick","clearInterval","setState","className","React","Component","callApi","a","fetch","apiInfo","response","json","body","status","Error","message","msg","sendGameReport","token","method","headers","JSON","stringify","getPlayers","data","ok","players","statusText","Scoreboard","gameMode","gameState","availablePlayers","serverStatus","home","id","name","isServing","away","newState","then","availPlayers","player_id","numPlayers","length","event","index","target","selectedIndex","options","value","text","curState","startGame","isServerConnected","onChange","onHomeChange","bind","map","player","key","type","onServingChange","checked","onAwayChange","slice","reverse","onClick","setPracticeMode","ScoreCard","score","handleKeyPress","nextPlay","whoScored","incrementPlays","checkForOvertime","checkForWinner","winScore","serveChangeLimit","plays","winner","document","addEventListener","removeEventListener","almostWin","setWinner","console","log","catch","err","setNewGame","App","initialState","useState","p","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b7b6430.chunk.js","sourcesContent":["import React from 'react';\n\n// Basic clock that shows the current time\n// so people can get back to work if they need to\nexport default class Clock extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttime: new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.intervalID = setInterval(\n\t\t\t() => this.tick(),\n\t\t\t1000\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.intervalID);\n\t}\n\n\ttick() {\n\t\tthis.setState({\n\t\t\ttime: new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true }),\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<p className=\"clock\">\n\t\t\t\t{this.state.time}\n\t\t\t</p>\n\t\t);\n\t}\n}","export default {\n\tcheckUrl: '/api/hello',\n\tsendUrl: '/api/submit-game',\n\tplayersUrl: '/api/get-players',\n\tserverToken: '102nf238971',\n};","import apiInfo from '../../config';\n\n// Hits API to make sure we are able to reach it\nexport const callApi = async () => {\n\tconst response = await fetch(apiInfo.checkUrl);\n\tconst body = await response.json();\n\t\n\tif (response.status !== 200) throw Error(body.message);\n\t\n\treturn body.msg;\n};\n\n// Sends the game results to the server to log in the DB\nexport const sendGameReport = async (state) => {\n\tstate.token = apiInfo.serverToken;\n\n\tconst response = await fetch(apiInfo.sendUrl, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(state),\n\t});\n\t\n\tconst body = await response.json();\n\t\n\tif (response.status !== 200) throw Error(body.message);\n\t\n\treturn body.message;\n};\n\n\n// Gets all available players\nexport const getPlayers = async () => {\n\tconst data = {\n\t\ttoken: apiInfo.serverToken\n\t};\n\n\tconst response = await fetch(apiInfo.playersUrl, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(data),\n\t});\n\n\tif(response.ok){\n\t\tconst body = await response.json();\n\t\t\n\t\tif (response.status !== 200) throw Error(body.message);\n\n\t\treturn body.players;\n\t}else{\n\t\tthrow Error(response.statusText)\n\t}\n\t\n};","import React from 'react';\nimport { callApi, getPlayers } from '../API/API';\n\n\nexport default class Scoreboard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tgameMode: 'standard',\n\t\t\tgameState: 'setup',\n\t\t\tavailablePlayers: [],\n\t\t\tserverStatus: 'CANNOT CONNECT TO API',\n\t\t\tplayers: {\n\t\t\t\thome: {\n\t\t\t\t\tid: '',\n\t\t\t\t\tname: '',\n\t\t\t\t\tisServing: true,\n\t\t\t\t},\n\t\t\t\taway: {\n\t\t\t\t\tid: '',\n\t\t\t\t\tname: '',\n\t\t\t\t\tisServing: false,\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tcomponentDidMount() {\n\t\tlet newState = this.state;\n\n\t\t// Checks to make sure we can even connect to api\n\t\t// then displays the server message\n\t\tcallApi()\n\t\t.then(msg => {\n\t\t\tnewState.serverStatus = msg;\n\t\t\t\n\t\t\t// If we can connect to server, fetch all players\n\t\t\tgetPlayers()\n\t\t\t.then(availPlayers => {\n\t\t\t\t// Set available players to state, and \n\t\t\t\t// sets first and last as defaults\n\t\t\t\tnewState.availablePlayers = availPlayers;\n\n\t\t\t\tnewState.players.home.id = availPlayers[0].player_id;\n\t\t\t\tnewState.players.home.name = availPlayers[0].name;\n\n\t\t\t\tconst numPlayers = availPlayers.length - 1;\n\t\t\t\t\n\t\t\t\tnewState.players.away.id = availPlayers[numPlayers].player_id;\n\t\t\t\tnewState.players.away.name = availPlayers[numPlayers].name;\n\t\t\t\t\n\t\t\t\tthis.setState(newState);\n\t\t\t});\n\t\t});\n\t}\n\n\t// Saves home player when changed\n\tonHomeChange(event){\n\t\tlet newState = this.state;\n\n\t\tconst index = event.target.selectedIndex;\n\t\tnewState.players.home.id = event.target.options[index].value;\n\t\tnewState.players.home.name = event.target.options[index].text;\n\n      this.setState(newState);\n\t}\n\n\t// Saves away player when changed\n\tonAwayChange(event){\n\t\tlet newState = this.state;\n\n\t\tconst index = event.target.selectedIndex;\n\t\tnewState.players.away.id = event.target.options[index].value;\n\t\tnewState.players.away.name = event.target.options[index].text;\n\t\t\n      this.setState(newState);\n\t}\n\n\t// Saves who's serving when changed\n\tonServingChange(event){\n\t\tlet newState = this.state;\n\n\t\tif(event.target.value === 'home'){\n\t\t\tnewState.players.home.isServing = true;\n\t\t\tnewState.players.away.isServing = false;\n\t\t}else if(event.target.value === 'away'){\n\t\t\tnewState.players.home.isServing = false;\n\t\t\tnewState.players.away.isServing = true;\n\t\t}\n\t\t\n      this.setState(newState);\n\t}\n\n\t// Starts game and passes up all our player info\n\tstartGame(){\n\t\tconst curState = this.state;\n\t\tthis.props.startGame({\n\t\t\tgameMode: curState.gameMode,\n\t\t\tgameState: 'playing',\n\t\t\tplayers: {\n\t\t\t\thome: {\n\t\t\t\t\tid: curState.players.home.id,\n\t\t\t\t\tname: curState.players.home.name,\n\t\t\t\t\tisServing: curState.players.home.isServing\n\t\t\t\t},\n\t\t\t\taway: {\n\t\t\t\t\tid: curState.players.away.id,\n\t\t\t\t\tname: curState.players.away.name,\n\t\t\t\t\tisServing: curState.players.away.isServing\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\t// Changes the players to defaults and sets it as a practice game\n\t// then starts game\n\tsetPracticeMode(){\n\t\tlet newState = this.state;\n\n\t\tnewState.gameMode = 'practice';\n\t\tnewState.players.home.name = 'Home';\n\t\tnewState.players.home.id = '';\n\t\tnewState.players.away.name = 'Away';\n\t\tnewState.players.away.id = '';\n\t\t\n\t\tthis.setState(newState);\n\t\t\n\t\tthis.startGame();\n\t}\n\n\trender(){\n\t\tconst isServerConnected = this.state.serverStatus === 'Connected to API';\n\n\t\treturn (\n\t\t\t<div className=\"setup\">\n\t\t\t\t<p \n\t\t\t\t\tclassName={`setup__server\n\t\t\t\t\t\t${isServerConnected ?\n\t\t\t\t\t\t\t``:`error-msg`}\n\t\t\t\t\t`}>\n\t\t\t\t\t{this.state.serverStatus}\n\t\t\t\t</p>\n\t\t\t\t<h1 className=\"setup__header\">Enter players</h1>\n\t\t\t\t<div className=\"setup__players\">\n\t\t\t\t\t<div className=\"setup__player setup__player--home\">\n\t\t\t\t\t\t<h2 className=\"setup__player-header\">Home</h2>\n\t\t\t\t\t\t{this.state.availablePlayers.length !== 0 ? \n\t\t\t\t\t\t\t<select \n\t\t\t\t\t\t\t\tid=\"home-player\" \n\t\t\t\t\t\t\t\tonChange={this.onHomeChange.bind(this)}>\n\t\t\t\t\t\t\t{this.state.availablePlayers.map(\n\t\t\t\t\t\t\t\t(player) => {\n\t\t\t\t\t\t\t\t\treturn <option \n\t\t\t\t\t\t\t\t\t\tkey={player.player_id} \n\t\t\t\t\t\t\t\t\t\tvalue={player.player_id}>\n\t\t\t\t\t\t\t\t\t\t\t{player.name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t: `No players available`}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"setup__serving\">\n\t\t\t\t\t\t<h3 className=\"setup__header\">Who's serving?</h3>\n\t\t\t\t\t\t<label className=\"setup__label\">\n\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"radio\" \n\t\t\t\t\t\t\tname=\"serving\" \n\t\t\t\t\t\t\tvalue=\"home\" \n\t\t\t\t\t\t\tonChange={this.onServingChange.bind(this)}\n\t\t\t\t\t\t\tchecked={this.state.players.home.isServing}/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label className=\"setup__label\">\n\t\t\t\t\t\t\tAway\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"radio\" \n\t\t\t\t\t\t\tname=\"serving\" \n\t\t\t\t\t\t\tvalue=\"away\" \n\t\t\t\t\t\t\tonChange={this.onServingChange.bind(this)} \n\t\t\t\t\t\t\tchecked={this.state.players.away.isServing}/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"setup__player setup__player--away\">\n\t\t\t\t\t\t<h2 className=\"setup__player-header\">Away</h2>\n\t\t\t\t\t\t{this.state.availablePlayers.length !== 0 ? \n\t\t\t\t\t\t\t<select \n\t\t\t\t\t\t\t\tid=\"away-player\" \n\t\t\t\t\t\t\t\tonChange={this.onAwayChange.bind(this)}>\n\t\t\t\t\t\t\t{this.state.availablePlayers.slice(0).reverse().map(\n\t\t\t\t\t\t\t\t(player) => {\n\t\t\t\t\t\t\t\t\tif(this.state.players.home.id !== player.player_id){\n\t\t\t\t\t\t\t\t\t\treturn <option \n\t\t\t\t\t\t\t\t\t\t\tkey={player.player_id} \n\t\t\t\t\t\t\t\t\t\t\tvalue={player.player_id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{player.name}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t}else return ''\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t: `No players available`}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={this.startGame.bind(this)}>\n\t\t\t\t\tStart Game\n\t\t\t\t</button>\n\t\t\t\t<button onClick={this.setPracticeMode.bind(this)}>\n\t\t\t\t\tPractice Game\n\t\t\t\t</button>\n\t\t\t</div>\n\t)};\n}","import React from 'react';\n\nexport default class ScoreCard extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"scoreboard__card\">\n\t\t\t\t<div className=\"scoreboard__serving-container\">\n\t\t\t\t\t{this.props.isServing ? \n\t\t\t\t\t\t<div className=\"scoreboard__serving\">\n\t\t\t\t\t\t\tServing\n\t\t\t\t\t\t</div>\n\t\t\t\t\t: ``}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"scoreboard__name\">\n\t\t\t\t\t{this.props.name}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"scoreboard__score\">\n\t\t\t\t\t{this.props.score}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n }","import React from \"react\";\nimport ScoreCard from './ScoreCard';\nimport { sendGameReport } from '../API/API';\n\nexport default class Scoreboard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t//* Activate this if you want to randomly select who serves first\n\t\t// let isHomeServing = true;\n\t\t\n\t\t// if(Math.random() >= 0.5){\n\t\t// \tisHomeServing = false;\n\t\t// }\n\t\t\n\t\t//* Official rules state rotating every:\n\t\t//* 2 points for 11 point games\n\t\t//* 5 points for 21 point games\n\n\t\t//* We play 5 points for 11 point games\n\t\t//* That will be the default until I can convince them otherwise\n\t\tconst winScore = {\n\t\t\tofficial: 11,\n\t\t\tlongPlay: 21,\n\t\t}\n\t\t\n\t\tconst servingRotation = {\n\t\t\tofficial: 2,\n\t\t\tlongPlay: 5,\n\t\t};\n\n\t\tthis.state = {\n\t\t\twinScore: winScore.official,\n\t\t\tserveChangeLimit: servingRotation.longPlay,\n\t\t\tplays: 0,\n\t\t\tgameMode: this.props.gameMode,\n\t\t\tgameState: 'playing',\n\t\t\twinner: {\n\t\t\t\tid: 0,\n\t\t\t\tname: ''\n\t\t\t},\n\t\t\thome: {\n\t\t\t\tid: props.players.home.id,\n\t\t\t\tname: props.players.home.name,\n\t\t\t\tscore: 0,\n\t\t\t\tisServing: props.players.home.isServing,\n\t\t\t},\n\t\t\taway: {\n\t\t\t\tid: props.players.away.id,\n\t\t\t\tname: props.players.away.name,\n\t\t\t\tscore: 0,\n\t\t\t\tisServing: props.players.away.isServing,\n\t\t\t}\n\t\t};\n\t}\n\t\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keyup\", this.handleKeyPress, false);\n\t}\n\n\tcomponentWillUnmount(){\n\t\tdocument.removeEventListener(\"keyup\", this.handleKeyPress, false);\n\t}\n\t\n\n\thandleKeyPress = (event) => {\n\t\tif(this.state.gameState !== 'gameOver'){\n\t\t\t//* Home team scoring is mapped to the Z button\n\t\t\t//* Away team is mapped to P button\n\t\t\tif(event.key === 'z'){\n\t\t\t\tthis.nextPlay('home')\n\t\t\t\t\n\t\t\t}else if(event.key === 'p'){\n\t\t\t\tthis.nextPlay('away')\n\t\t\t}\n\t\t}\n\n\t\t//TODO Add reset functionality\n\t}\n\n\t//This processes the current play and starts the next play\n\tnextPlay = (whoScored) => {\n\t\tlet newState = this.state;\n\n\t\tnewState = this.incrementPlays(newState);\n\n\t\t//Gives the point to whoever got it\n\t\tif(whoScored === 'home'){\n\t\t\tnewState.home.score++;\n\t\t}else if(whoScored === 'away'){\n\t\t\tnewState.away.score++;\n\t\t}\n\n\t\t//Checks if we need to go into overtime\n\t\tif(this.checkForOvertime(newState)){\n\t\t\tnewState.gameState = 'overtime';\n\t\t}\n\n\t\t//Checks if someone has won, and if so, does win state setup\n\t\tnewState = this.checkForWinner(newState);\n\n\t\tthis.setState(newState);\n\t}\n\n\tincrementPlays(state) {\n\t\t// Adds a play and decides if we need to switch servers\n\t\t//* A play is not considered happened until someone scores\n\t\t\n\t\tstate.plays++;\n\n\t\tif (state.plays % state.serveChangeLimit === 0) {\n\t\t\t// Switches server\n\t\t\tstate.home.isServing = !state.home.isServing;\n\t\t\tstate.away.isServing = !state.away.isServing;\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tcheckForOvertime(state) {\n\t\tif(state.gameState === 'overtime'){ return true; }\n\t\t\n\t\tconst almostWin = state.winScore - 1;\n\n\t\tif(state.home.score === almostWin\n\t\t\t&& state.away.score === almostWin){\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\n\tcheckForWinner(state) {\n\t\t//Formats winner for adding to state\n\t\tfunction setWinner(player){\n\t\t\tlet result = {\n\t\t\t\tid: player.id,\n\t\t\t\tname: player.name\n\t\t\t};\n\t\n\t\t\treturn result;\n\t\t}\n\n\t\tlet winner = {\n\t\t\tid: '',\n\t\t\tname: ''\n\t\t};\n\n\t\t//If it's overtime, the win conditions are different\n\t\tif(state.gameState === 'overtime'){\n\t\t\tif(state.home.score - state.away.score >= 2){\n\t\t\t\twinner = setWinner(state.home);\n\t\t\t}else if(state.away.score - state.home.score >= 2){\n\t\t\t\twinner = setWinner(state.away);\n\t\t\t}\n\t\t}else{ //Regular win conditions\n\t\t\tif(state.home.score === state.winScore){\n\t\t\t\twinner = setWinner(state.home);\n\t\t\t}else if(state.away.score === state.winScore){\n\t\t\t\twinner = setWinner(state.away);\n\t\t\t}\n\t\t}\n\n\t\tif(winner.name !== ''){\n\t\t\tstate.winner = winner;\n\t\t\tstate.gameState = 'gameOver';\n\n\t\t\t// Only saves game results if we aren't in a practice round\n\t\t\tif(state.gameMode === 'standard'){\n\t\t\t\t//Sends the game results to the backend api\n\t\t\t\t//Logs the response to the console\n\t\t\t\tsendGameReport(state)\n\t\t\t\t\t.then(msg => console.log(msg))\n\t\t\t\t\t.catch(err => console.log(err));\n\t\t\t}\n\t\t}\n\n\n\t\treturn state;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"scoreboard\">\n\t\t\t\t<ScoreCard \n\t\t\t\t\tname={this.state.home.name} \n\t\t\t\t\tscore={this.state.home.score} \n\t\t\t\t\tisServing={this.state.home.isServing} />\n\t\t\t\t<ScoreCard \n\t\t\t\t\tname={this.state.away.name} \n\t\t\t\t\tscore={this.state.away.score} \n\t\t\t\t\tisServing={this.state.away.isServing} />\n\n\t\t\t\t{this.state.gameState === 'gameOver' ? \n\t\t\t\t\t<div className=\"scoreboard__gameover\">\n\t\t\t\t\t\t<h1>GAME OVER</h1>\n\t\t\t\t\t\t<p>{this.state.winner.name} wins!</p>\n\t\t\t\t\t\t<button onClick={() => this.props.setNewGame()}>\n\t\t\t\t\t\t\tStart New Game\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t: ``}\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, { useState } from 'react';\nimport './styles/App.scss';\nimport Clock from './components/Clock/Clock';\nimport Setup from './components/Setup/Setup';\nimport Scoreboard from './components/Scoreboard/Scoreboard';\n\nfunction App() {\n  // Sets up game state and players so it can be passed down \n  // into the scoreboard after setup\n\n  //* Gamestate can be:\n\t\t//* setup\n\t\t//* playing\n\t\t//* overtime\n    //* gameover\n    \n  //* Game mode can be:\n\t\t//* standard\n    //* practice\n    \n  const initialState = {\n    gameMode: 'standard',\n    gameState: 'setup',\n    players: {\n      home: {\n        id: '',\n        name: 'Home',\n        isServing: true\n      },\n      away: {\n        id: '',\n        name: 'Away',\n        isServing: false\n      }\n    }\n  }\n\n  const [state, setState] = useState(initialState);\n\n  return (\n    <div className=\"App\">\n      <Clock />\n      {state.gameState === 'setup' ? \n        <Setup startGame={p=>{setState(p)}} />\n      :\n        <Scoreboard \n          players={state.players} \n          gameMode={state.gameMode} \n          setNewGame={()=>{setState(initialState)}}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}